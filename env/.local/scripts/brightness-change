#!/usr/bin/env bash

iDIR="$HOME/personal/dev/env/.config/swaync/icons"
notification_timeout=1000
step=10

get_brightness() {
    brightnessctl -m | cut -d, -f4 | sed "s/%//"
}

get_icon() {
    current=$(get_brightness)
    if [[ $current -le "20" ]]; then
        icon="$iDIR/brightness-20.png"
    elif [[ $current -le "40" ]]; then
        icon="$iDIR/brightness-40.png"
    elif [[ $current -le "60" ]]; then
        icon="$iDIR/brightness-60.png"
    elif [[ $current -le "80" ]]; then
        icon="$iDIR/brightness-80.png"
    else 
        icon="$iDIR/brightness-100.png"
    fi
}

notify_user() {
	notify-send -e -h string:x-canonical-private-synchronous:brightness_notif -h int:value:$current -u low -i $icon "Screen" "Brightness:$current%"
}

change_brightness() {
    local current_brightness
    current_brightness=$(get_brightness)

	if [[ "$1" == "+${step}%" ]]; then
		new_brightness=$((current_brightness + step))
	elif [[ "$1" == "${step}%-" ]]; then
		new_brightness=$((current_brightness - step))
	fi

	# Ensure new brightness is within valid range
	if (( new_brightness < 5 )); then
		new_brightness=5
	elif (( new_brightness > 100 )); then
		new_brightness=100
	fi

	brightnessctl set "${new_brightness}%"
	get_icon
	current=$new_brightness
	notify_user
}

case "$1" in
	"--get")
        get_brightness	
		;;
	"--inc")
		change_brightness "+${step}%"
		;;
	"--dec")
		change_brightness "${step}%-"
		;;
	*)
        get_brightness	
		;;
esac
